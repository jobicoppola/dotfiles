#!/bin/bash
# connect to existing tmux session or start fresh
# TODO: this should all be possible using just the conf file...
# someone should totally do something about that

# main session
session=0

# user vars
[ -z "$USER" ] && USER=jcopp
if [ -z "$HOME" ]; then
    if [[ "$(uname)" == Darwin ]]; then
        HOME=/Users/$USER
    else
        HOME=/home/$USER
    fi
fi

# if there is a session already then attach
tmux has-session -t $session
if [ $? -eq 0 ]; then
    echo "Session $session already exists so let's attach to it..."
    sleep .5
    tmux attach -t $session
    exit 0;
fi

# create new session then detach
tmux new-session -d -s $session

# make sure ssh auth sock gets set
tmux setenv -t $session SSH_AUTH_SOCK /tmp/ssh-agent-$(hostname)

# open some windows
tmux neww -t $session:0 -n root
tmux neww -t $session:1 -n home
tmux neww -t $session:2 -n bin
tmux neww -t $session:3 -n b.py
tmux neww -t $session:4 -n dls
tmux neww -t $session:5 -n git
tmux neww -t $session:6 -n dbox
tmux neww -t $session:7 -n lino
tmux neww -t $session:8 -n jbot
tmux neww -t $session:9 -n misc

# tell windows what to do
tmux send-keys -t $session:0 "sudo su -" C-m
tmux send-keys -t $session:1 "cd $HOME/" C-m
tmux send-keys -t $session:2 "cd $HOME/bin" C-m
tmux send-keys -t $session:3 "bpython" C-m
tmux send-keys -t $session:4 "cd $HOME/Downloads" C-m
tmux send-keys -t $session:5 "cd $HOME/git" C-m
tmux send-keys -t $session:6 "cd $HOME/Dropbox" C-m
tmux send-keys -t $session:7 "ssh jcopp@74.207.230.61" C-m
tmux send-keys -t $session:8 "ssh jcopp@jobot" C-m
tmux send-keys -t $session:9 "cd $HOME/" C-m

# set default selected win
tmux select-window -t $session:1

# attach to new session
tmux attach -t $session
