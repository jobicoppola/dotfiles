#!/bin/bash
# connect to existing tmux session, or start fresh
# TODO: move functionality provided here into tmux.conf, as this should all be
# possible just with appropriate config settings there, so, like, someone
# should totally do something about that

# check if we need to add identities to ssh-agent before starting
~/bin/ssh-start
read -p "Do we need to add identities to ssh-agent? " addids
[[ "$addids" == y* ]] && ~/bin/ssh-start now

# main session
session=0

# if there is a session already, attach to it and exit
tmux has-session -t $session
if [ $? -eq 0 ]; then
    echo "Session $session already exists so let's attach to it..."
    sleep .5
    tmux attach -t $session
    exit 0;
fi

# if there are no existing sessions,
# let's create a new session, then detach
tmux new-session -d -s $session

# set some names
three=repl
four=venvs
five=sncore
six=dotfiles
seven=snweb
eight=snsysadmin
nine=perform/pg-prod
repos=~/git

# open some default windows
tmux neww -t $session:0 -n temp
tmux neww -t $session:1 -n home
tmux neww -t $session:2 -n bin
tmux neww -t $session:3 -n $three
tmux neww -t $session:4 -n $four
tmux neww -t $session:5 -n $five
tmux neww -t $session:6 -n $six
tmux neww -t $session:7 -n $seven
tmux neww -t $session:8 -n $eight
tmux neww -t $session:9 -n syseng

# avoid reattach-to-user-namespace as window title
tmux kill-window -t $session:0
tmux neww -t $session:0 -n root

# split some windows into panes, then set those panes up
for n in {3..9}; do
    if [ $n -eq 3 ]; then
        tmux splitw -v -t $session:$n
        tmux send -t $session:$n.top "~/bin/bpython_start" C-m
        tmux send -t $session:$n.bottom "cd ~ && pry" C-m
    else
        tmux splitw -h -t $session:$n
        tmux splitw -v -t $session:$n
        if [ $n -eq 4 ]; then
            tmux send -t $session:$n.+1 "cd ~/venvs && workon sn-inventory-dev" C-m
            tmux send -t $session:$n.+2 "cd ~/venvs && workon sn-inventory-dev" C-m
            tmux send -t $session:$n.+3 "cd ~/venvs && workon sn-inventory-dev" C-m
        elif [ $n -eq 5 ]; then
            tmux send -t $session:$n.+1 "cd $repos/$five && git status -sb" C-m
            tmux send -t $session:$n.+2 "cd $repos/$five" C-m
            tmux send -t $session:$n.+3 "cd $repos/$five" C-m
        elif [ $n -eq 6 ]; then
            tmux send -t $session:$n.+1 "cd $repos/$six && git status -sb" C-m
            tmux send -t $session:$n.+2 "cd $repos/$six" C-m
            tmux send -t $session:$n.+3 "cd $repos/$six" C-m
        elif [ $n -eq 7 ]; then
            tmux send -t $session:$n.+1 "cd $repos/$seven && git status -sb" C-m
            tmux send -t $session:$n.+2 "cd $repos/$seven" C-m
            tmux send -t $session:$n.+3 "cd $repos/$seven" C-m
        elif [ $n -eq 8 ]; then
            tmux send -t $session:$n.+1 "cd $repos/$eight && git status -sb" C-m
            tmux send -t $session:$n.+2 "cd $repos/$eight" C-m
            tmux send -t $session:$n.+3 "cd $repos/$eight" C-m
        elif [ $n -eq 9 ]; then
            tmux send -t $session:$n.+1 "cd $repos/$nine/ansible && git status -sb" C-m
            tmux send -t $session:$n.+2 "cd $repos/$nine" C-m
            tmux send -t $session:$n.+3 "cd $repos/$nine" C-m
            #tmux killp -t $session:$n.+3
        fi
    tmux select-pane -t :.+
    fi
done

# tell rest of the windows what to do
tmux send-keys -t $session:1 "cd ~" C-m
tmux send-keys -t $session:2 "cd ~/bin" C-m
tmux send-keys -t $session:0 "sudo su -" C-m

# set default selected win
tmux select-window -t $session:1

# attached to new session
tmux attach -t $session
